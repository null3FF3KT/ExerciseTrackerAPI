// <auto-generated />
using System;
using ExerciseTrackerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseTrackerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ExerciseTrackerAPI.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Distance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseTypeId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ExerciseTrackerAPI.Models.ExerciseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("ExerciseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Walking"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Hiking"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Jogging"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Running"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Weight Lifting"
                        },
                        new
                        {
                            Id = 6,
                            TypeName = "Gardening"
                        });
                });

            modelBuilder.Entity("ExerciseTrackerAPI.Models.Exercise", b =>
                {
                    b.HasOne("ExerciseTrackerAPI.Models.ExerciseType", "ExerciseType")
                        .WithMany()
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseType");
                });
#pragma warning restore 612, 618
        }
    }
}
